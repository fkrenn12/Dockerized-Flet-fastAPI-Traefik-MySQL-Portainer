### !!! D E P L O Y M E N T Changes !!! ###
# service: mosquitto -> comment out unsecure port # - "${MQTT_PORT_UNSECURE}:1883"
# service: phpmyadmin -> uncomment  "- PMA_ABSOLUTE_URI= ${PHPMYADMIN_ABSOLUTE_URI}"
# service: api -> adding "--root-path /makeraccess/api" to command line starting the uvicorn server
version: '1.0'
services:
  db:
    image: mariadb
    restart: always
    stdin_open: true # docker run -i
    tty: true        # docker run -t
    volumes:
      - ./.mariadb/certs:/etc/mysql/certs
      - ./.mariadb/conf.d/secure.cnf:/etc/mysql/conf.d/secure.cnf
      - db_data:/var/lib/mysql
      - /etc/localtime:/etc/localtime
    environment:
      # MYSQL_ROOT_PASSWORD_FILE: /run/secrets/root_password  # not working
      MARIADB_ROOT_PASSWORD: example
    secrets:
      - root_password
    # port visible on the host to get access via ssh
    ports:
      - "${DB_PORT}:3306"
    networks:
      - backnet
    # expose make it visible on the backnet but not on the host
    expose:
      - "${DB_PORT}"
    depends_on:
      - mosquitto
  mosquitto:
     image: eclipse-mosquitto:latest
     restart: always
     volumes:
        - ./.mosquitto/config:/mosquitto/config:ro
        - ./.mosquitto/certs:/mosquitto/certs:ro
        - ./.mosquitto/log:/mosquitto/log
        - ./.mosquitto/data:/mosquitto/data
        - ./.mosquitto/certs/generate_certificates.sh:/mosquitto/certs/generate_certificates.sh
     ports:
       # Attention: 1883 is unsecure - only use it internal !
       # - "${MQTT_PORT_UNSECURE}:1883"
       - "${MQTT_PORT_SECURE}:8783"
     expose:
        - ${MQTT_PORT_UNSECURE}
     networks:
        - backnet
     command:
       # chmod 0700 /mosquitto/data/mosquitto.db
       # /mosquitto/certs/./generate_certificates.sh
       - /bin/sh
       - -c
       - |
         apk update
         apk add openssl
         /mosquitto/certs/./generate_certificates.sh
         mosquitto -c /mosquitto/config/mosquitto.conf

  phpmyadmin:
    image: phpmyadmin
    restart: always
    ports:
      - 8081:80
    environment:
      # - PMA_ARBITRARY=1
      - PMA_HOST=db
      # Set the variable PMA_ABSOLUTE_URI to the fully-qualified path 
      # (https://pma.example.net/) where the reverse proxy makes phpMyAdmin available. PHPMYADMIN_ABSOLUTE_URI
      # - PMA_ABSOLUTE_URI= https://techfit.at/makeraccess/phpmyadmin/
      # bei http auf localhost - PMA_ABSOLUTE_URI auskommentieren
      # - PMA_ABSOLUTE_URI= ${PHPMYADMIN_ABSOLUTE_URI}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.phpmyadmin.rule=Host(`${SUBDOMAIN_PHPMYADMIN}${DOMAIN}`)"
    depends_on:
      - db
    networks:
       - backnet
  app:
    # image: python:slim
    build: ./backend/app_async
    restart: always
    stdin_open: true # docker run -i
    tty: true        # docker run -t
    volumes:
      - ./config:/usr/src/config:ro
      - .env:/usr/src/.env:ro
      - ./backend/shared_database:/usr/src/shared_database:ro
      - ./backend/shared_mqtt:/usr/src/shared_mqtt:ro
      - ./backend/shared_utils:/usr/src/shared_utils:ro
      - ./backend/log:/usr/src/log
      - /etc/localtime:/etc/localtime
    # install requirements on start.sh of the container
    command:
      - /bin/sh
      - -c
      - |
        cd /usr/src/app
        python main.py
    networks:
      - backnet
    depends_on:
     - db
     - mosquitto
  api_unsecure:
    build: ./backend/api_unsecure
    restart: always
    stdin_open: true # docker run -i
    tty: true        # docker run -t
    ports:
      - '${UNSECURE_API_PORT}:${UNSECURE_API_PORT}'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.remote-update.rule=Host(`${SUBDOMAIN_REMOTE_UPDATE}${DOMAIN}`)"
    networks:
      - backnet
    volumes:
      - ./config:/usr/src/config:ro
      - ./.env:/usr/src/.env
      - ./backend/shared_database:/usr/src/shared_database:ro
      - ./backend/shared_utils:/usr/src/shared_utils:ro
      - ./backend/log:/usr/src/log
      - /etc/localtime:/etc/localtime
      - ./backend/api_unsecure/firmware:/usr/src/app/firmware
    command:
      # start uvicorn server
      - /bin/sh
      - -c
      - |
        cd /usr/src/app
        uvicorn main:api --host "0.0.0.0" --port ${UNSECURE_API_PORT}
    depends_on:
      - db
  api:
    # image: python:slim
    build: ./backend/api
    restart: always
    stdin_open: true # docker run -i
    tty: true        # docker run -t
    ports:
      - '${API_PORT}:${API_PORT}'
    volumes:
      - ./config:/usr/src/config:ro
      - .env:/usr/src/.env:ro
      - ./backend/shared_database:/usr/src/shared_database:ro
      - ./backend/shared_mqtt:/usr/src/shared_mqtt:ro
      - ./backend/shared_utils:/usr/src/shared_utils:ro
      - ./backend/log:/usr/src/log
      - /etc/localtime:/etc/localtime
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api-secure.rule=Host(`${SUBDOMAIN_API}${DOMAIN}`)"
    networks:
      - backnet

    # uvicorn main:api --host "0.0.0.0" --port ${API_PORT} --proxy-headers --root-path /makeraccess/api
    # The root path is defined through the nginx reverse proxy settings in /etc/nginx/sites-available/default
    command:
      - /bin/sh
      - -c
      - |
        cd /usr/src/app
        uvicorn main:api --host "0.0.0.0" --port ${API_PORT} --proxy-headers
    depends_on:
      - db
      - mosquitto

  # php-nginx
  # nginx and php are running as user: 'nobody'
  php-nginx:
    image: trafex/php-nginx
    restart: always
    ports:
      - 8080:8080
    volumes:
    # default site
      - ./frontend/web_php_version/html:/var/www/html
    # nginx settings
      - ./frontend/web_php_version/nginx-php-config/default.conf:/etc/nginx/conf.d/default.conf
      - ./frontend/web_php_version/nginx-php-config/sites-enabled/site.conf:/etc/nginx/conf.d/site.conf
    # php settings
      - ./frontend/web_php_version/nginx-php-config/php-custom.ini:/etc/php81/conf.d/php-custom.ini
    # php fpm settings
      - ./frontend/web_php_version/nginx-php-config/php-custom-fpm-settings.conf:/etc/php81/php-fpm.d/server.conf
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web-php.rule=Host(`${SUBDOMAIN_WEB_OLD}${DOMAIN}`)"
    networks:
      - backnet
    depends_on:
      - db

  django-react:
    restart: always
    build: ./frontend/django_react/.
    volumes:
      - ./config:/usr/src/config:ro
      - .env:/usr/src/.env:ro
    ports:
      - "5005:5005"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.django-react.rule=Host(`${SUBDOMAIN_WEB}${DOMAIN}`)"
    networks:
      - backnet

  web-app:
    build: ./frontend/web-app
    container_name: web-app
    restart: always
    stdin_open: true # docker run -i
    tty: true        # docker run -t
    # ports:
    #  - "7777:7777"
    environment:
      - FLET_FORCE_WEB_SERVER=true
      - FLET_SERVER_PORT=7777
      - FLET_APP_LIFETIME_MINUTES=10
    volumes:
      - ./config:/usr/src/config:ro
      - ./.env.prod:/usr/src/.env:ro
      - ./frontend/web-app:/usr/src/app:ro
    labels:
      # Frontend
      - "traefik.enable=true"
      - "traefik.http.routers.web-app.rule=Host(`${SUBDOMAIN_WEBAPP}${DOMAIN}`)"
      - "traefik.http.routers.web-app.entrypoints=websecure"
      - "traefik.http.services.web-app.loadbalancer.server.port=7777"
      - "traefik.http.routers.web-app.service=web-app"
      - "traefik.http.routers.web-app.tls.certresolver=letsencrypt"
    command:
      - /bin/sh
      - -c
      - |
        cd /usr/src/app
        python main.py
    networks:
      - backnet

  traefik:
    build:
      context: ./.traefik
      dockerfile: Dockerfile.dev
    ports:
      - 80:80
      - 443:443
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./.traefik/public-certificates:/certificates"
    command:
      - "--certificatesresolvers.letsencrypt.acme.email=${EMAIL})"
      - "--providers.docker=true"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`${SUBDOMAIN_TRAEFIK_DASH}${DOMAIN}`) && (PathPrefix(`/`))" 
      - "traefik.http.routers.traefik.tls=false"
      - "traefik.http.routers.traefik.tls.certresolver=letsencrypt"
      - "traefik.http.routers.traefik.service=api@internal"
      # basic auth do not work yet
      # - "traefik.http.routers.traefik.middlewares=traefik_auth"
      # - "traefik.http.middleware.traefik_auth.basicauth.users=franz:$$2a$$12$$nAy8yi.264b/kNZXZobYw.YqQQErWRS9Do2rz0Bci6H6WYMkIpCsG"
    networks:
      - backnet

networks:
  backnet:

volumes:
  db_data:
      name: ${DB_VOLUME_NAME}
  mosquitto:

secrets:
  root_password:
    file: root_password.txt
